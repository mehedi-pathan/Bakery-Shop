generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  password  String
  phone     String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]

  @@map("users")
}

model Product {
  id          String      @id @default(cuid())
  name        String      @unique
  description String?
  price       Decimal
  category    String
  image       String?
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderItems  OrderItem[]

  @@map("products")
}

model Order {
  id            String      @id @default(cuid())
  userId        String
  status        OrderStatus @default(PENDING)
  subtotal      Decimal
  customerName  String?
  customerPhone String?
  note          String?
  txnId         String?
  verifiedAt    DateTime?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  items         OrderItem[]
  user          User        @relation(fields: [userId], references: [id])
  review        Review?

  @@map("orders")
}

model Review {
  id        String   @id @default(cuid())
  orderId   String   @unique
  rating    Int      @default(5)
  comment   String?
  createdAt DateTime @default(now())
  order     Order    @relation(fields: [orderId], references: [id])

  @@map("reviews")
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Decimal
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  ADVANCE_VERIFIED
  IN_PROGRESS
  READY
  COMPLETED
  CANCELLED
}
